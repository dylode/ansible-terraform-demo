{%- for resource in target_provider_active_resources | selectattr('type', 'eq', 'lxc') -%}
variable "{{ resource.name }}-ips" {
  default = {
    {% for ip in resource.network.ip %}
        "{{ loop.index - 1 }}" = "{{ ip }}"
    {% endfor %}
  }
}

resource "{{ supported_resource_types[resource.type] }}" "{{ resource.name }}" {
  target_node  = "{{ target_provider.vars.target_node }}"
  hostname     = "{{ target_provider.name }}-{{ resource.name }}-${count.index + 1}"
  ostemplate   = "{{ resource.template_storage | default(target_provider.vars.defaults.template_storage) }}:vztmpl/{{ resource.template }}"
  unprivileged = {{ resource.unprivileged | default(true) | lower }}
  count        = {{ resource.count | default(1) }}
  pool         = "{{ resource.pool | default(target_provider.vars.defaults.pool) }}"
  start        = true
  onboot       = true
  ssh_public_keys = <<-EOT
{% for key in target_provider.vars.ssh_keys %}
    {{ key }}
{% endfor %}
  EOT

  rootfs {
    storage = "{{ resource.volume_storage | default(target_provider.vars.defaults.volume_storage) }}"
    size    = "{{ resource.size }}"
  }

  network {
    name   = "{{ resource.network.name | default(target_provider.vars.defaults.lxc_network.name) }}"
    bridge = "{{ resource.network.bridge | default(target_provider.vars.defaults.lxc_network.bridge) }}"
    ip     = "${lookup(var.{{ resource.name }}-ips, count.index)}"
    gw     = "{{ resource.network.gateway }}"
{% if resource.network.vlan_tag %}
    tag    = "{{ resource.network.vlan_tag }}"
{% endif %}
  }
}

{% endfor %}
{% for resource in target_provider_active_resources -%}
resource "ansible_host" "{{ resource.name }}" {
  for_each = {
    for index, lxc in {{ supported_resource_types[resource.type] }}.{{ resource.name }} : lxc.hostname => lxc.network[0].ip
  }

  name   = each.key
  groups = {{ resource.groups | to_json }}

  variables = {
    ansible_host  = split("/", each.value)[0]
    provider_name = "{{ target_provider_name }}"
    provider_type = "{{ target_provider.type }}"
    resource_type = "{{ resource.type }}"
  }
}

{% endfor %}